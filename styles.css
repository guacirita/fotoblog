*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font--smoothing: grayscale;
}

:root {
  font-size: 62.5%;

  --color-base-white: #FFFFFF;
  --color-base-gray-100: #F5F5F5;
  --color-base-gray-300: #8D8D99;
  --color-base-gray-500: #3D3D3D;
  --color-base-gray-900: #202024;

  /*Hue = tom, Saturation = saturação e Lightness = luminosidade*/
  /* outra forma de declarar as cores em hsl*/
  /*--hue: 100;
  --color-base-white: hsl(0, 0%, 100%);
  --color-base-gray-100: hsl(0, 0%, 96%);
  --color-base-gray-300: hsl(var(--hue), 60%, 58%);
  --color-base-gray-500: hsl(0, 0%, 24%);
  --color-base-gray-900: hsl(var(--hue), 60%, 20%);*/
}

html, 
body, 
input {
  font-family: "Mulish", sans-serif;
}

body {
  font-size: 1.6rem;
  background-color: var(--color-base-white);
  color: var(--color-base-gray-900);
}


#app {
  display: grid;
  grid-template-rows: max-content 1fr max-content;
  height: 100vh;
}

.container {
  padding: 1.6rem 3.2rem;
  width: min(112rem, 100%);
  margin: 0 auto;
}

main {
  overflow-y: scroll;
  scrollbar-gutter: stable both-edges; /*para manter o texto header e main alinhados*/
  background-color: var(--color-base-gray-100);
}

header,
nav,
nav ul {
  display: flex;
  align-items: center;
  gap: 7.2rem;
  font-weight: 700;
}

header form {
  flex: 1;
}

nav ul {
  list-style: none;
  font-size: 1.8rem;
  color: var(--color-base-gray-300);
}

ul li.active {
  color: var(--color-base-gray-900);
}

.input-wrapper label{
  width: 1px;
  height: 1px;
  overflow: hidden; /*esconde o label*/
  position: absolute;
}

.input-wrapper input {
  width: 100%;
  padding: 1.6rem;

  background-color: var(--color-base-gray-100);
  border: 0;
  border-radius: 1.6rem;
  font-weight: 600;
}

.input-wrapper input::placeholder {
  opacity: 0.56;
  color: var(--color-base-gray-500);
}

.avatar {
  width: 4.2rem;
  height: 4.2rem;

  object-fit: cover; /*para não desconfigurar a imagem*/
  border-radius: 50%;
}

/*galeria*/

main h1 {
  padding-top: 1.6rem;
  font-size: 2.4rem;
}

.gallery {
  margin-top: 3.2rem;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2.2rem;
}

.item {
  background-color: var(--color-base-white);
  border-radius: .8rem;
  overflow: hidden; /*escondendo o que transbordar de imagem*/
}

.details {
  padding: 2.2rem;
  background-color: var(--color-base-white);
  z-index: 1;
  position: relative;
}

.details h2 {
  font-size: 1.8rem;
}

.tags {
  margin-top: 1.2rem;
}

.tags span {
  padding: .6rem;
  background-color: var(--color-base-gray-100);
  border-radius: 1.4rem;

  line-height: 0;
  font-size: 1.2rem;
  text-transform: uppercase;
}

.item img {
  width: 100%;
  aspect-ratio: 16/9; /*proporção da imagem*/
  object-fit: cover;

  filter: grayscale(.5);

  /*transition-property: filter; */
  /*transition-property: transform, filter; /*posso usar all para todas as propriedades ou por virgula*/
  /*transition-delay: 1s; 
  transition-duration: 1s;
  /* transition-timing-function: ease-in; /*começa devagar e termina rápido */
  /*transition-timing-function: ease-in-out; /* aqui pode aumentar a duration e zerar o delay*/

  transition: all 200ms ease-out; /*pode colocar tbm as outras propriedades juntas no lugar do all*/

  display: block; /*pra tirar o espaço entre a imagem*/
}

.item img:hover {
  filter: hue-rotate(7deg) contrast(100%) saturate(200%); /*filtros na img*/
  transform: scale(1.1) rotate(-2deg);
}

footer p {
  text-align: center;
  padding: 1.6rem;
  font-weight: 600;
}

header {
  --startY: -100%;
 animation: move .2s;
}

footer {
  --startY: 100%
  animation: move .2s;
}

@keyframes move {
  from {
    transform: translateY(var(--startY));
  }
}

/*imagens aparecer*/

.item {
  --delay: .4s;
  animation: appear var(--delay) backwards;
}
@keyframes appear {
  0% {
    opacity: 0;
    transform: scale(0.7);
  }

  50% {
    transform: scale(1.2);
  }
  
}